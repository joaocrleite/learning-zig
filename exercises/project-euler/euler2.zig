const std = @import("std");
const expect = std.testing.expect;
// const console = std.io.getStdOut().writer();

// Even Fibonacci Numbers
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1,2,3,5,8,13,21,34,55,89,...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

fn is_even_number(num: usize) bool {
    return num % 2 == 0;
}

fn sum_fibonacci_even_numbers(below: usize) usize {
    var a: usize = 1;
    var b: usize = 2;
    var even_sum: usize = 0;

    while (b < below) {
        if (is_even_number(b)) {
            even_sum += b;
        }

        var temp = a + b;
        a = b;
        b = temp;
    }
    return even_sum;
}

test "sum of even fibonacci numbers below 100" {
    const result = sum_fibonacci_even_numbers(100);
    try expect(result == 44);
}

test "sum of even fibonacci numbers below 4 million" {
    const result = sum_fibonacci_even_numbers(4_000_000);
    try expect(result == 4_613_732);
}

// zig test ./exercises/project-euler/euler2.zig
